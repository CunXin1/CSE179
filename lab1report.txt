Task1:

root@WIN-17422NPDIIJ:/mnt/c/Users/Administrator/CSE179/Lab1/task1# make
gcc -Iinclude -c src/learn_makefile.c -o obj/learn_makefile.o
gcc -Iinclude -c src/printfunc.c -o obj/printfunc.o
gcc obj/learn_makefile.o obj/printfunc.o -o task1
root@WIN-17422NPDIIJ:/mnt/c/Users/Administrator/CSE179/Lab1/task1# make clean
rm -f obj/*.o task1
root@WIN-17422NPDIIJ:/mnt/c/Users/Administrator/CSE179/Lab1/task1# make
gcc -Iinclude -c src/learn_makefile.c -o obj/learn_makefile.o
gcc -Iinclude -c src/printfunc.c -o obj/printfunc.o
gcc obj/learn_makefile.o obj/printfunc.o -o task1

Task 1 shows how to organize project files using a Makefile. 
It builds files from separate directories and provides a clean rule to remove build artifacts.




Task2:

PS C:\Users\Administrator\CSE179> cd "c:\Users\Administrator\CSE179\Lab1\task2\" ; if ($?) { g++ fibonacci.cpp -o fibonacci } ; if ($?) { .\fibonacci }
Enter number of terms: 5
Fibonacci Series: 1 + 1 + 2 + 3 + 5 + 
Execution time: 0 microseconds
PS C:\Users\Administrator\CSE179\Lab1\task2> cd "c:\Users\Administrator\CSE179\Lab1\task2\" ; if ($?) { g++ fibonacci.cpp -o fibonacci } ; if ($?) { .\fibonacci }
Enter number of terms: 100
Fibonacci Series: 1 + 1 + 2 + 3 + 5 + 8 + 13 + 21 + 34 + 55 + 89 + 144 + 233 + 377 + 610 + 987 + 1597 + 2584 + 4181 + 6765 + 10946 + 17711 + 28657 + 46368 + 75025 + 121393 + 196418 + 317811 + 514229 + 832040 + 1346269 + 2178309 + 3524578 + 5702887 + 9227465 + 14930352 + 24157817 + 39088169 + 63245986 + 102334155 + 165580141 + 267914296 + 433494437 + 701408733 + 1134903170 + 1836311903 + -1323752223 + 512559680 + -811192543 + -298632863 + -1109825406 + -1408458269 + 1776683621 + 368225352 + 2144908973 + -1781832971 + 363076002 + -1418756969 + -1055680967 + 1820529360 + 764848393 + -1709589543 + -944741150 + 1640636603 + 695895453 + -1958435240 + -1262539787 + 1073992269 + -188547518 + 885444751 + 696897233 + 1582341984 + -2015728079 + -433386095 + 1845853122 + 1412467027 + -1036647147 + 375819880 + -660827267 + -285007387 + -945834654 + -1230842041 + 2118290601 + 887448560 + -1289228135 + -401779575 + -1691007710 + -2092787285 + 511172301 + -1581614984 + -1070442683 + 1642909629 + 572466946 + -2079590721 + -1507123775 + 708252800 + -798870975 + -90618175 + -889489150 + -980107325 + 
Execution time: 11508 microseconds

Task 2 uses the gettimeofday function to measure the loop's execution time in microseconds.
The results show that larger input sizes lead to increased execution times.




Task3:

index % time    self  children    called     name
                                                 <spontaneous>
[1]     63.1    3.46    0.00                 frame_dummy [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     36.7    0.00    2.01                 main [2]
                1.44    0.00   10252/10252       EvalEOSForElems(Domain&, double*, int, int*, int) [3]
                0.00    0.57       1/1           Domain::Domain(int, int, int, int, int, int, int, int, int) [5]
                0.00    0.00    8388/8413        std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [12]
                0.00    0.00       1/1           ParseCommandLineOptions(int, char**, int, cmdLineOpts*) [15]
                0.00    0.00       1/1           InitMeshDecomp(int, int, int*, int*, int*, int*) [14]
                0.00    0.00       1/1           VerifyAndWriteFinalOutput(double, Domain&, int, int) [16]
-----------------------------------------------
                1.44    0.00   10252/10252       main [2]
[3]     26.3    1.44    0.00   10252         EvalEOSForElems(Domain&, double*, int, int*, int) [3]
-----------------------------------------------
                             3130076             CalcElemVolume(double const*, double const*, double const*) [4]
                0.57    0.00   27000/27000       Domain::Domain(int, int, int, int, int, int, int, int, int) [5]
[4]     10.4    0.57    0.00   27000+3130076 CalcElemVolume(double const*, double const*, double const*) [4]
                             3130076             CalcElemVolume(double const*, double const*, double const*) [4]
-----------------------------------------------
                0.00    0.57       1/1           main [2]
[5]     10.4    0.00    0.57       1         Domain::Domain(int, int, int, int, int, int, int, int, int) [5]
                0.57    0.00   27000/27000       CalcElemVolume(double const*, double const*, double const*) [4]
                0.00    0.00      25/8413        std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [12]
                0.00    0.00       9/11          std::vector<int, std::allocator<int> >::_M_default_append(unsigned long) [13]
                0.00    0.00       1/1           Domain::SetupCommBuffers(int) [17]
                0.00    0.00       1/1           Domain::BuildMesh(int, int, int) [22]
                0.00    0.00       1/1           Domain::SetupThreadSupportStructures() [21]
                0.00    0.00       1/1           Domain::CreateRegionIndexSets(int, int) [18]
                0.00    0.00       1/1           Domain::SetupElementConnectivities(int) [20]
                0.00    0.00       1/1           Domain::SetupBoundaryConditions(int) [19]
-----------------------------------------------
                                                 <spontaneous>
[6]      0.2    0.01    0.00                 _init [6]


Task 3 uses gprof to identify the top functions consuming the most execution time.